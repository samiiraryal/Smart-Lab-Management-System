<?php

<<<<<<<< HEAD:backend/var/cache/dev/ContainerBkA9ba0/getNestedTokenBuilderFactoryService.php
namespace ContainerBkA9ba0;
========
namespace ContainerDQ5ka7F;

>>>>>>>> origin/sandesh:backend/var/cache/dev/ContainerDQ5ka7F/getNestedTokenBuilderFactoryService.php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNestedTokenBuilderFactoryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Jose\Bundle\JoseFramework\Services\NestedTokenBuilderFactory' shared autowired service.
     *
     * @return \Jose\Bundle\JoseFramework\Services\NestedTokenBuilderFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'web-token'.\DIRECTORY_SEPARATOR.'jwt-framework'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Bundle'.\DIRECTORY_SEPARATOR.'Services'.\DIRECTORY_SEPARATOR.'NestedTokenBuilderFactory.php';

        return $container->services['Jose\\Bundle\\JoseFramework\\Services\\NestedTokenBuilderFactory'] = new \Jose\Bundle\JoseFramework\Services\NestedTokenBuilderFactory(($container->services['Jose\\Bundle\\JoseFramework\\Services\\JWEBuilderFactory'] ?? $container->load('getJWEBuilderFactoryService')), ($container->services['Jose\\Component\\Encryption\\Serializer\\JWESerializerManagerFactory'] ?? self::getJWESerializerManagerFactoryService($container)), ($container->services['Jose\\Bundle\\JoseFramework\\Services\\JWSBuilderFactory'] ?? $container->load('getJWSBuilderFactoryService')), ($container->services['Jose\\Component\\Signature\\Serializer\\JWSSerializerManagerFactory'] ?? self::getJWSSerializerManagerFactoryService($container)), ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container)));
    }
}
